#Exercise A.18 p.
from scitools.std import *

def cosine_Taylor(x,n):		#nth degree Taylor approx. of Cosine.
    sp = 0     
    ap = 1
    for j in range(1,n+2):
        s = sp + ap
        a = ap * (-1.)*x**2 / ((2*j-1)*(2*j))
        ap = a
        sp = s
    return s,abs(a)


print 'test for x*pi/2 with x=0->20 and n=25:'
for i in range(0,21):
    answer = cosine_Taylor(i*pi/2,25)[0]
    print '%2.f*pi/2   %20.17f' %(i,answer)



print 'test for pi/2 with n=0 -> 20:'
for i in range(0,21):
    answer = cosine_Taylor(pi/2,i)[0]
    print '   n=%2.f   %20.17f' %(i,answer)

"""
Terminal> python cos_Taylor_series_diffeq.py 
test for x*pi/2 with x=0->20 and n=25:
 0*pi/2    1.00000000000000000
 1*pi/2    0.00000000000000004
 2*pi/2   -1.00000000000000022
 3*pi/2    0.00000000000000007
 4*pi/2    0.99999999999999534
 5*pi/2    0.00000000000001915
 6*pi/2   -0.99999999999978550
 7*pi/2   -0.00000000000049807
 8*pi/2    0.99999999998132549
 9*pi/2   -0.00000000763038771
10*pi/2   -1.00000180089514790
11*pi/2   -0.00025155368781933
12*pi/2    0.97720692064189629
13*pi/2   -1.43567979341414542
14*pi/2   -67.33981362324459496
15*pi/2   -2346.89554374409453885
16*pi/2   -65790.41377332457341254
17*pi/2   -1503270.48575148545205593
18*pi/2   -28657554.51205672323703766
19*pi/2   -464809735.15022516250610352
20*pi/2   -6521399544.60438156127929688
test for pi/2 with n=0 -> 20:
   n= 0    1.00000000000000000
   n= 1   -0.23370055013616975
   n= 2    0.01996895776487823
   n= 3   -0.00089452299847473
   n= 4    0.00002473727636469
   n= 5   -0.00000046476600837
   n= 6    0.00000000632146952
   n= 7   -0.00000000006513357
   n= 8    0.00000000000052606
   n= 9   -0.00000000000000338
   n=10    0.00000000000000006
   n=11    0.00000000000000004
   n=12    0.00000000000000004
   n=13    0.00000000000000004
   n=14    0.00000000000000004
   n=15    0.00000000000000004
   n=16    0.00000000000000004
   n=17    0.00000000000000004
   n=18    0.00000000000000004
   n=19    0.00000000000000004
   n=20    0.00000000000000004
"""
